/*
 * Copyright 2014 Takuya Asano
 * Copyright 2010-2014 Atilika Inc. and contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";

var TokenInfoDictionary = require("./TokenInfoDictionary.js");
var CharacterDefinition = require("./CharacterDefinition.js");
var ByteBuffer = require("../util/ByteBuffer.js");


/**
 * UnknownDictionary
 * @constructor
 */
function UnknownDictionary() {
    // TokenInfoDictionary.apply(this);  // execute super class constructor
    this.dictionary = new ByteBuffer(10 * 1024 * 1024);
    this.target_map = {};  // class_id (of CharacterClass) -> token_info_id (of unknown class)
    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);
    this.character_definition = null;
}

// Inherit from TokenInfoDictionary as a super class
UnknownDictionary.prototype = Object.create(TokenInfoDictionary.prototype);
// UnknownDictionary.prototype.constructor = UnknownDictionary;

UnknownDictionary.prototype.characterDefinition = function (character_definition) {
    this.character_definition = character_definition;
    return this;
};

UnknownDictionary.prototype.lookup = function (ch) {
    return this.character_definition.lookup(ch);
};

UnknownDictionary.prototype.lookupCompatibleCategory = function (ch) {
    return this.character_definition.lookupCompatibleCategory(ch);
};

UnknownDictionary.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {
    this.loadDictionary(unk_buffer);
    this.loadPosVector(unk_pos_buffer);
    this.loadTargetMap(unk_map_buffer);
    this.character_definition = CharacterDefinition.load(cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);
};


module.exports = UnknownDictionary;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGljdC9Vbmtub3duRGljdGlvbmFyeS5qcyIsIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzIjpbImRpY3QvVW5rbm93bkRpY3Rpb25hcnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE0IFRha3V5YSBBc2Fub1xuICogQ29weXJpZ2h0IDIwMTAtMjAxNCBBdGlsaWthIEluYy4gYW5kIGNvbnRyaWJ1dG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIFRva2VuSW5mb0RpY3Rpb25hcnkgPSByZXF1aXJlKFwiLi9Ub2tlbkluZm9EaWN0aW9uYXJ5LmpzXCIpO1xudmFyIENoYXJhY3RlckRlZmluaXRpb24gPSByZXF1aXJlKFwiLi9DaGFyYWN0ZXJEZWZpbml0aW9uLmpzXCIpO1xudmFyIEJ5dGVCdWZmZXIgPSByZXF1aXJlKFwiLi4vdXRpbC9CeXRlQnVmZmVyLmpzXCIpO1xuXG5cbi8qKlxuICogVW5rbm93bkRpY3Rpb25hcnlcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBVbmtub3duRGljdGlvbmFyeSgpIHtcbiAgICAvLyBUb2tlbkluZm9EaWN0aW9uYXJ5LmFwcGx5KHRoaXMpOyAgLy8gZXhlY3V0ZSBzdXBlciBjbGFzcyBjb25zdHJ1Y3RvclxuICAgIHRoaXMuZGljdGlvbmFyeSA9IG5ldyBCeXRlQnVmZmVyKDEwICogMTAyNCAqIDEwMjQpO1xuICAgIHRoaXMudGFyZ2V0X21hcCA9IHt9OyAgLy8gY2xhc3NfaWQgKG9mIENoYXJhY3RlckNsYXNzKSAtPiB0b2tlbl9pbmZvX2lkIChvZiB1bmtub3duIGNsYXNzKVxuICAgIHRoaXMucG9zX2J1ZmZlciA9IG5ldyBCeXRlQnVmZmVyKDEwICogMTAyNCAqIDEwMjQpO1xuICAgIHRoaXMuY2hhcmFjdGVyX2RlZmluaXRpb24gPSBudWxsO1xufVxuXG4vLyBJbmhlcml0IGZyb20gVG9rZW5JbmZvRGljdGlvbmFyeSBhcyBhIHN1cGVyIGNsYXNzXG5Vbmtub3duRGljdGlvbmFyeS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFRva2VuSW5mb0RpY3Rpb25hcnkucHJvdG90eXBlKTtcbi8vIFVua25vd25EaWN0aW9uYXJ5LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFVua25vd25EaWN0aW9uYXJ5O1xuXG5Vbmtub3duRGljdGlvbmFyeS5wcm90b3R5cGUuY2hhcmFjdGVyRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIChjaGFyYWN0ZXJfZGVmaW5pdGlvbikge1xuICAgIHRoaXMuY2hhcmFjdGVyX2RlZmluaXRpb24gPSBjaGFyYWN0ZXJfZGVmaW5pdGlvbjtcbiAgICByZXR1cm4gdGhpcztcbn07XG5cblVua25vd25EaWN0aW9uYXJ5LnByb3RvdHlwZS5sb29rdXAgPSBmdW5jdGlvbiAoY2gpIHtcbiAgICByZXR1cm4gdGhpcy5jaGFyYWN0ZXJfZGVmaW5pdGlvbi5sb29rdXAoY2gpO1xufTtcblxuVW5rbm93bkRpY3Rpb25hcnkucHJvdG90eXBlLmxvb2t1cENvbXBhdGlibGVDYXRlZ29yeSA9IGZ1bmN0aW9uIChjaCkge1xuICAgIHJldHVybiB0aGlzLmNoYXJhY3Rlcl9kZWZpbml0aW9uLmxvb2t1cENvbXBhdGlibGVDYXRlZ29yeShjaCk7XG59O1xuXG5Vbmtub3duRGljdGlvbmFyeS5wcm90b3R5cGUubG9hZFVua25vd25EaWN0aW9uYXJpZXMgPSBmdW5jdGlvbiAodW5rX2J1ZmZlciwgdW5rX3Bvc19idWZmZXIsIHVua19tYXBfYnVmZmVyLCBjYXRfbWFwX2J1ZmZlciwgY29tcGF0X2NhdF9tYXBfYnVmZmVyLCBpbnZva2VfZGVmX2J1ZmZlcikge1xuICAgIHRoaXMubG9hZERpY3Rpb25hcnkodW5rX2J1ZmZlcik7XG4gICAgdGhpcy5sb2FkUG9zVmVjdG9yKHVua19wb3NfYnVmZmVyKTtcbiAgICB0aGlzLmxvYWRUYXJnZXRNYXAodW5rX21hcF9idWZmZXIpO1xuICAgIHRoaXMuY2hhcmFjdGVyX2RlZmluaXRpb24gPSBDaGFyYWN0ZXJEZWZpbml0aW9uLmxvYWQoY2F0X21hcF9idWZmZXIsIGNvbXBhdF9jYXRfbWFwX2J1ZmZlciwgaW52b2tlX2RlZl9idWZmZXIpO1xufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IFVua25vd25EaWN0aW9uYXJ5O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9